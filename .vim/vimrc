" Base settings
set enc=utf-8
set nocompatible
set autoindent
set backspace=indent,eol,start
set clipboard=unnamed
set number relativenumber
set ruler
set showmatch
set smartindent
set splitbelow
set splitright
set termguicolors
set updatetime=250

" Cursor
set cursorline
set cursorcolumn

" Wildmenu
set wildmenu
set wildignore+=*.dll,*.o,*.pyc,*.bak,*.exe,*.jpg,*.jpeg,*.png,*.gif,*$py.class,*.class,*/*.dSYM/*,*.dylib
set wildmode=list:full

" Disable beeps
set noerrorbells visualbell t_vb=

" Search settings
set hlsearch
set ignorecase
set incsearch
set infercase

" Indentation
set expandtab
set shiftwidth=4
set softtabstop=4

" Tags
set tags=tags

" Completition
set completeopt=longest,menuone

" Syntx highlighting sync from start
autocmd BufEnter * :syntax sync fromstart

" Map leader
let mapleader=","
let maplocalleader="\\"

" Moving through wraps
map j gj
map k gk

" Emacs style bindings
imap <C-a> <Home>
imap <C-e> <End>

" Yank from cursor to eol
nnoremap Y y$

" Splits navigation
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
tnoremap <C-j> <C-w>j
tnoremap <C-k> <C-w>k
tnoremap <C-h> <C-w>h
tnoremap <C-l> <C-w>l

" Space to prev buffer
nnoremap <space> :b#<CR>

nmap <leader>e :Explore<CR>

" ALE bindings
nmap <leader>d :ALEToggleBuffer<CR>

" Open terminal in vertical split
nmap <leader>z :vert :terminal<CR>

" FZF bindings
nmap ; :Buffers<CR>
nmap <leader>ft :Tags<CR>
nmap <leader>ff :Files!<CR>
nmap <leader>fa :Rg!<CR>
nmap <leader>fl :Lines!<CR>

" Git bindings
nmap <leader>gs :Gstatus<CR>
nmap <leader>gc :Commits!<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gb :Gblame<CR>

" Select the just pasted text
nnoremap <leader>v V`]

" Unbind arrows in normal mode
nnoremap <Up> :echomsg "use k"<cr>
nnoremap <Down> :echomsg "use j"<cr>
nnoremap <Left> :echomsg "use h"<cr>
nnoremap <Right> :echomsg "use l"<cr>

" Tab to brackets
nnoremap <tab> %
vnoremap <tab> %

" Various quality of life bindings
nmap <leader><space> :nohlsearch<CR>
nmap <leader>q :bd<CR>

" Pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

" FZF
set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf

" Rg config
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 2..'}, 'right:50%:hidden', '?')
  \           : fzf#vim#with_preview({'options': '--delimiter : --nth 2..'}),
  \   <bang>0)

let g:fzf_tags_command = 'ctags -R'
let g:fzf_layout = {'down': '50%'}
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Airline
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#whitespace#checks = []
let g:airline_skip_empty_sections = 1

" GitGutter 
let g:gitgutter_sign_added = '|'
let g:gitgutter_sign_modified = '|'
let g:gitgutter_sign_removed = '|'
let g:gitgutter_sign_modified_removed = '|'

" netrw
let g:netrw_liststyle = 3
let g:netrw_banner = 0

" ALE
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0

" Colors
syntax on
set background=dark
colorscheme gotham

" Enable filetype plugins and indention
filetype plugin indent on

" YAML
autocmd FileType yaml setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2

" JSON
autocmd FileType json setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2

" Groovy
autocmd FileType groovy setlocal expandtab shiftwidth=4 tabstop=8 softtabstop=4

call plug#begin('~/.vim/bundle')

" FZF
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'

" Git
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Quotes, parenthesis, brackets
Plug 'raimondi/delimitmate'

" Statusline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Syntax
Plug 'sheerun/vim-polyglot'

call plug#end()

" Base settings
set enc=utf-8
set nocompatible
set autoindent
set backspace=indent,eol,start
set number relativenumber
set ruler
set showmatch
set smartindent
set splitbelow
set splitright
set termguicolors
set updatetime=250

" Cursor
set cursorline
set cursorcolumn

" Wildmenu
set wildmenu
set wildignore+=*.dll,*.o,*.pyc,*.bak,*.exe,*.jpg,*.jpeg,*.png,*.gif,*$py.class,*.class,*/*.dSYM/*,*.dylib
set wildmode=list:full

" Disable beeps
set noerrorbells visualbell t_vb=

" Search settings
set hlsearch
set ignorecase
set incsearch
set infercase

" Indentation
set expandtab
set shiftwidth=4
set softtabstop=4

" Completition
set completeopt=longest,menuone

" Syntx highlighting sync from start
autocmd BufEnter * :syntax sync fromstart

" Map leader
let mapleader=","
let maplocalleader="\\"

" Moving through wraps
map j gj
map k gk

" Emacs style bindings
imap <C-a> <Home>
imap <C-e> <End>

" Yank from cursor to eol
nnoremap Y y$

" Splits navigation
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
tnoremap <C-j> <C-w>j
tnoremap <C-k> <C-w>k
tnoremap <C-h> <C-w>h
tnoremap <C-l> <C-w>l

" Space to prev buffer
nnoremap <space> :b#<CR>

nmap <leader>e :Explore<CR>

" Open terminal in vertical split
nmap <leader>z :vnew<CR>
nmap <leader>x :new<CR>

" FZF bindings
nmap ; :Buffers<CR>
nmap <leader>ft :Tags<CR>
nmap <leader>ff :Files!<CR>
nmap <leader>fa :Rg!<CR>
nmap <leader>fl :Lines!<CR>

" Git bindings
nmap <leader>gs :Gstatus<CR>
nmap <leader>gc :Commits!<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gb :Gblame<CR>

" Tab to brackets
nnoremap <tab> %
vnoremap <tab> %

" Various quality of life bindings
nmap <leader><space> :nohlsearch<CR>
nmap <leader>q :bd<CR>

" Airline
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#whitespace#checks = []
let g:airline_skip_empty_sections = 1

" Delimitmate
let b:delimitMate_expand_cr = 2
let b:delimitMate_expand_inside_quotes = 1
let b:delimitMate_expand_space = 0

" Colors
syntax on

" Enable filetype plugins and indention
filetype plugin indent on

" YAML
autocmd FileType yaml setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2

" JSON
autocmd FileType json setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2

" Groovy
autocmd FileType groovy setlocal expandtab shiftwidth=4 tabstop=8 softtabstop=4

" Markdown
autocmd FileType markdown let b:delimitMate_nesting_quotes = ['`']

" Python
autocmd FileType python let b:delimitMate_nesting_quotes = ['"']

" Go
autocmd FileType go setlocal shiftwidth=4 tabstop=4 softtabstop=4
